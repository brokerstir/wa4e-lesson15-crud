https://www.wa4e.com/assn/autosdb/

Resources
There are several resources you might find useful:

Recorded lectures, sample code and chapters from www.wa4e.com:
Review the SQL language
Using PDO in PHP
Documentation on HTML Injection
Documentation from www.php.net on how to use PDO to connect to a database.
Documentation on SQL Injection
Documentation on PHP PDO Prepared Statements
You can look though the sample code from the lecture. It has examples of using PDO to communicate with a database:
http://www.wa4e.com/code/pdo.zip
General Specifications
Here are some general specifications for this assignment:

You must use the PHP PDO database layer for this assignment. If you use the "mysql_" library routines or "mysqli" routines to access the database, you will receive a zero on this assignment.
Your name must be in the title tag of the HTML for all of the pages for this assignment.
Your program must be resistant to HTML Injection attempts. All data that comes from the users must be properly escaped using the htmlentities() function in PHP. You do not need to escape text that is generated by your program.
Your program must be resistant to SQL Injection attempts. This means that you should never concatenate user provided data with SQL to produce a query. You should always use a PDO prepared statement.
Please do not use HTML5 in-browser data validation (i.e. type="number") for the fields in this assignment as we want to make sure you can properly do server side data validation. And in general, even when you do client-side data validation, you should still validate data on the server in case the user is using a non-HTML5 browser.
Databases and Tables Required for the Assignment
You already should have a PHP hosting environment such as MAMP or XAMPP installed or have some other access to a MySQL client to run commands.

You will need to create a database, a user to connect to the database and a password for that user using commands similar to the following:

create database misc;

GRANT ALL ON misc.* TO 'fred'@'localhost' IDENTIFIED BY 'zap';
GRANT ALL ON misc.* TO 'fred'@'127.0.0.1' IDENTIFIED BY 'zap';

You will need to make a connection to that database in a file like this if you are using MAMP (Macintosh):

<?php
$pdo = new PDO('mysql:host=localhost;port=8889;dbname=misc', 'fred', 'zap');
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

If you are using XAMPP or Linux yor file should change the port to 3306:

<?php
$pdo = new PDO('mysql:host=localhost;port=3306;dbname=misc', 'fred', 'zap');
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

Usually this file is named pdo.php and is included in each of the files that want to use the database. You will need to change the user name and password on both your GRANT statements and in the code that makes the PDO connection.
You will also need to create and configure a table in the new "misc" database using the following SQL commands:

CREATE TABLE autos (
   auto_id INT UNSIGNED NOT NULL AUTO_INCREMENT KEY,
   make VARCHAR(128),
   year INTEGER,
   mileage INTEGER
);

NOTE: There is also a require once for a pdo_db_live.php file. This file is not included in the repo as it contains database credentials for database on live server.
